<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | 落寞纷飞]]></title>
  <link href="http://WinterXMQ.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://WinterXMQ.github.io/"/>
  <updated>2014-10-08T14:09:28+00:00</updated>
  <id>http://WinterXMQ.github.io/</id>
  <author>
    <name><![CDATA[WinterXMQ]]></name>
    <email><![CDATA[WinterXMQ@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[VBox下Linux与主机Windows的文件共享]]></title>
    <link href="http://WinterXMQ.github.io/blog/2014/10/06/vbox-linux-file-share/"/>
    <updated>2014-10-06T06:36:11+00:00</updated>
    <id>http://WinterXMQ.github.io/blog/2014/10/06/vbox-linux-file-share</id>
    <content type="html"><![CDATA[<p>本文的方法参考自<a href="http://blog.csdn.net/jakiechen68/article/details/7263023" title="Blog_VBox-Linux 文件共享">jakiechen</a>, 有什么不对的地方请大家指点。</p>

<p>适用对象: VBox下 子系统为Linux, 安装了增强工具包(virtualbox-guest-utils in Arch Linux)</p>

<ol>
<li>VBox 下设置共享文件夹</li>
</ol>


<p>在VBox下设置一个共享文件夹, 菜单栏 -> 设备 -> 共享文件夹, 在 &lsquo;共享文件夹列表&rsquo; 下增加一个固定分配。</p>

<p>选择共享文件夹, 设置共享文件夹名称(不要含中文或者其他方块字)。</p>

<p><strong>注意:</strong> 1. 要记住共享文件夹的名字, 不要随意变更, 这个和Linux中的设置有关, 2. 不要选择 <code>Auto-mount</code> 即自动挂载<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>

<p><img class="center" src="/p/pic/file_share_1.png" title="增加共享文件夹" ></p>

<p><img class="center" src="/p/pic/file_share_2.png" title="增加共享文件夹列表" ></p>

<ol>
<li>Linux 下挂载</li>
</ol>


<p>创建文件夹 <code>mkdir -p /mnt/share</code></p>

<p>挂载共享文件夹 <code>sudo mount -t vboxsf Tex /mnt/share</code></p>

<p>然后就可以在 <code>/mnt/share</code> 下看到恭喜文件夹里的内容了</p>

<p><em>为了方便管理, 我把这个文件夹软连接到我的工作文件夹下了, <code>ln -s /mnt/share ~/Code/tex</code></em></p>

<ol>
<li>设置自动挂载</li>
</ol>


<p>为了方便使用, 将其设置成自动挂载</p>

<pre><code class="bash">&gt;&gt; sudo vim /etc/fstab
Add following
# VBox share file
Tex     /mnt/share  vboxsf  rw,gid=100,uid=1000,auto    0 0
</code></pre>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>参考自jakiechen, 上面说在下次重启后会出现由于共享文件夹为空而挂载失败, 出现的错误提示为: /sbin/mount.vboxsf: mounting failed with the error: Invalid argument<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Archlinux 的安装]]></title>
    <link href="http://WinterXMQ.github.io/blog/2014/09/28/archlinux-install/"/>
    <updated>2014-09-28T00:08:29+00:00</updated>
    <id>http://WinterXMQ.github.io/blog/2014/09/28/archlinux-install</id>
    <content type="html"><![CDATA[<p>其实很早就像写个Archlinux的安装Blog, 但是由于很多原因就一直拖到现在才开始动手</p>

<p>Archlinux和Linux的其他发行版不同, Arch就像是四驱赛车一样, 需要自己挑选零件、自己组装, 因此具有很大的自由度而且难度也不是非常大&lt;当然相比于其他的发行版已经是难多了, 其实我比较推从gentoo, 它比Arch还要复杂, 因为它连零件都要自己制作>。选择Arch的第二个原因是它的软件中心, 支持自定义软件。</p>

<p>接下来我们谈谈Arch的安装问题, 我分别在虚拟机<code>Vbox</code>和实体机都装过, 因此在这个Blog中会详细的谈谈。在Arch安装中最复杂的就是桌面环境的配置, 我也尚未完全搞定, 因此不再Blog中做过多的说明。</p>

<h1>Basic System Install</h1>

<p>基本系统的安装在虚拟机和实体机上的差别为0, 其中的注意点就是在于软件包的选择和安装上。</p>

<h2>Download the system for installation</h2>

<p>首先需要下载<a href="https://www.archlinux.org/download/" title="Arch Linux System Download">官方镜像</a>, 无论用什么下载工具都无所谓。</p>

<p>在这个小节中最重要的就是如何制作安装U盘&lt;如果只是为了说明如何下载就开一个新的小节来说明就显得太脑残了, 同时这一小节也是虚拟机和实体机安装中为数不多的差别中的第一个>。</p>

<blockquote><p>Linux</p></blockquote>

<p>在Linux中, 启动U盘相对好做一点&lt;毕竟要安装的是Linux, 同时是因为Linux中对待磁盘的工具比较灵活, 可以满是不同的磁盘操作需求>。</p>

<p>首先, 通过 <code>lsblk</code> 来找到你的U盘</p>

<p>然后通过下面的命令完成镜像的写入<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>

<pre><code class="bash">&gt;&gt; dd bs=4M if=/path/to/archlinux.iso of=/dev/sdx &amp;&amp; sync
</code></pre>

<blockquote><p>Windows</p></blockquote>

<p>在Windows下需要借助第三方的软件来达到目标, 采用<a href="http://rufus.akeo.ie/" title="Rufus 下载">Rufus</a>。当然也有其他的解决方案, 但是不怎么方便&lt;其实是我自己没有成功过>。</p>

<blockquote><p><strong>注意点</strong>:</p>

<ol>
<li><p> 任何被用来制作Arch Linux的安装盘的U盘中的数据都会被清除, 而且无论U盘是多大的, 制作完毕后可用的内存都是24M&lt;没记错的是话就是这么大的>。</p></li>
<li><p> 如果U盘需要还原, 在以后的Blog中介绍</p></li>
<li><p> 对于这部分有什么疑问的可以参照<a href="https://wiki.archlinux.org/index.php/USB_flash_installation_media" title="Arch Linux Official Wiki on USB-Flash-Install-Media">Arch Linux的官方Wiki</a></p></li>
</ol>
</blockquote>

<h2>Configure the Install System</h2>

<p><em>说明: 开这个小节主要是为了总结我的安装过程, 很多朋友应该可以直接忽略</em></p>

<p>首先启动系统&lt;如何启动系统就不说了></p>

<h3>Configure the net</h3>

<p>配置网络:</p>

<ol>
<li><p> 虚拟机: 一般的新建的虚拟机都可以正常的访问网络&lt;如果有问题, 请问度娘></p></li>
<li><p> 实体机:</p>

<ul>
<li><p>Wifi: 运行 <code>wifi-menu interface-name</code></p></li>
<li><p>dsl:  依次运行 <code>pppeo-setup</code>, <code>pppoe-start</code> 来启动dsl, 运行 <code>pppoe-stop</code> 来停止dsl</p></li>
</ul>
</li>
</ol>


<p><em>对于虚拟机可能需要配置静态IP, 通过 <code>ip addr add dev enp0s8 192.168.1.109/24</code> 来完成</em></p>

<h3>About the Sources</h3>

<p>这的地方的配置主要是为了解决国外源速度慢的问题, 把源换成国内相对比较快的。</p>

<p>首先先备份一下</p>

<pre><code class="bash">&gt;&gt; cd /etc/pacman.d/
&gt;&gt; mv mirrorlist mirrorlist.origin
</code></pre>

<p>设置软件源, 由于<a href="https://www.archlinux.org/mirrorlist" title="Arch Linux 官方软件园查询">Arch提供软件源查询</a>的功能, 我们采用官方查询的方式解决。</p>

<pre><code class="bash">&gt;&gt; wget -c "https://www.archlinux.org/mirrorlist/?country=CN&amp;protocol=http&amp;ip_version=4&amp;ip_version=6" -O mirrorlist
</code></pre>

<p><strong>注意点</strong>: 下载官方软件源查询出来的文件中的软件源都是被注释掉的, 我们需要手动打开 <code>nano mirrorlist</code>, 即去除 <code>mirrorlist</code> 文件中的 #</p>

<p>此外, 还可以采用Arch中的一个工具对配置中的软件源进行速度排序&lt;可以试试>, 具体操作如下</p>

<pre><code class="bash">&gt;&gt; mv mirrorlist mirrorlist.backup
&gt;&gt; rankmirrors -n 6 mirrorlist.backup &gt; mirrorlist
</code></pre>

<p>然后更新pacman的缓存 <code>pacman -Syy</code>, 同时装上vim方便修改配置文件 <code>pacman -S vim</code></p>

<p>在这里, 提一下个人的习惯, 在终端下配置和安装系统总有些不习惯&lt;开始玩Arch的时候, 现在无所谓了>, &lt;如果条件允许>总是在另一个电脑上用ssh登陆, 进行远程安装&lt;尤其是在虚拟机里安装时, 相对方便一些></p>

<p>可以按照如下命令完成ssh server的配置安装, 同时需要记住本机IP, 通过 <code>ifconfig</code> 查看</p>

<pre><code class="bash">&gt;&gt; pacman -S openssh
&gt;&gt; systemctl start sshd
</code></pre>

<h2>Install the System</h2>

<p>在这里完成基本系统的安装, 使得电脑可以脱离安装光盘orU盘独立运行和配置</p>

<h3>About Partition</h3>

<p>这里不涉及磁盘分区的具体知识, 也不涉及如何分区, 只提两点:</p>

<ol>
<li><p>如果在虚拟机里安装时, 初始安装不要求磁盘有多大&lt;只要有2G就足够了, 后期不够可以再加></p></li>
<li><p>home可以单独分区或分磁盘</p></li>
</ol>


<p>按照如下命令完成分区操作</p>

<pre><code class="bash">&gt;&gt; cfdisk /dev/sda      # 进行分区, 2G的Swap分区, 其余的/分区
&gt;&gt; lsblk
&gt;&gt; fdisk -l
&gt;&gt; mkfs.ext4 /dev/sda1  # 格式化 /分区
&gt;&gt; mkswap /dev/sda2     # 格式化 Swap分区
&gt;&gt; swapon /dev/sda2     # 挂载 Swap分区
&gt;&gt; mount /dev/sda1 /mnt # 挂在 /分区
&gt;&gt; fdisk -l             # 显示挂载情况
&gt;&gt; lsblk -f
</code></pre>

<h3>System Installation</h3>

<p>完成基本系统的安装, 以及配置的基本工具, 按照如下指令完成</p>

<p>下面的四个命令分别完成 <code>基本系统</code>, <code>shell</code>, <code>网络连接工具</code>, <code>常用工具</code> 的安装</p>

<pre><code class="bash">&gt;&gt; pacstrap -i /mnt base base-devel
&gt;&gt; pacstrap -i /mnt bash-completion zsh
&gt;&gt; pacstrap -i /mnt ifplugd wireless_tools wpa_supplicant iw wpa_actiond dialog net-tools rp-pppoe
&gt;&gt; pacstrap -i /mnt openssh vim
</code></pre>

<h3>System Configure</h3>

<p>完成最基本的系统配置<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup></p>

<ol>
<li>生成分区列表</li>
</ol>


<pre><code class="bash">&gt;&gt; genfstab -U -p /mnt &gt;&gt; /mnt/etc/fstab
</code></pre>

<ol>
<li><p>进入系统, <code>arch-chroot /mnt /bin/zsh</code></p></li>
<li><p>配置语言环境</p></li>
</ol>


<pre><code class="bash">&gt;&gt; vim /etc/locale.gen
选择 en_US 和 zh_CN
&gt;&gt; locale-gen
&gt;&gt; export LANG="zh_CN.UTF-8"
&gt;&gt; export LANGUAGE="zh_CN:en_US:en"
&gt;&gt; locale &gt; /etc/locale.conf            # 设置中文环境, 并写入配置
</code></pre>

<ol>
<li>设置系统时间</li>
</ol>


<p>选择上海时区</p>

<pre><code class="bash">&gt;&gt; ln -s /usr/share/zoneinfo/Zone/SubZone /etc/localtime
</code></pre>

<p>选择UTC</p>

<pre><code class="bash">&gt;&gt; hwclock --systohc --utc
</code></pre>

<ol>
<li><p>设置主机名, <code>echo Arch-XMQ &gt; /etc/hostname</code></p></li>
<li><p>设置内核模块加载, <code>mkinitcpio -p linux</code></p></li>
<li><p>用户设置</p></li>
</ol>


<p>root用户设置</p>

<pre><code class="bash">&gt;&gt; passwd
&gt;&gt; usermod -s /usr/bin/zsh root
</code></pre>

<p>普通用户创建和配置</p>

<pre><code class="bash">&gt;&gt; useradd -m -g users -G video,audio,power,network,wheel -s /usr/bin/zsh xmq
&gt;&gt; usermod -a -G video,audio,lp,log,wheel,optical,scanner,games,users,storage,power xmq
&gt;&gt; passwd xmq
</code></pre>

<p>普通用户的超级权限配置</p>

<pre><code class="bash">&gt;&gt; chmod 640 /etc/sudoers
&gt;&gt; vim /etc/sudoers
Add `xmq ALL=(ALL) ALL` or
Add `wheel ALL=(ALL) ALL`
&gt;&gt; chmod 440 /etc/sudoers
</code></pre>

<ol>
<li>引导系统的安装</li>
</ol>


<pre><code class="bash">&gt;&gt; pacman -S grub os-prober
&gt;&gt; grub-install /dev/sda
&gt;&gt; grub-mkconfig -o /boot/grub/grub.cfg
&gt;&gt; grep -v rootfs /proc/mounts &gt; /etc/mtab
</code></pre>

<ol>
<li>退出重启</li>
</ol>


<pre><code class="bash">&gt;&gt; exit
&gt;&gt; umount /mnt
&gt;&gt; reboot
</code></pre>

<h1>Desktop Configuration</h1>

<p>桌面的配置并没有完全搞定, 之前用过一段时间的KDE, Gnome, 也配置过一段时间的Openbox, 终究没用长久, 这里主要写一些关于XWindow的配置, 涉及一点的Openbox</p>

<h2>Configuration of Xorg</h2>

<p>这一部分主要完成从终端环境切换到图形界面, 主要包括 <code>X</code> 和 <code>桌面环境</code> 的配置</p>

<h3>Xorg Install</h3>

<p>完成Xorg的安装&lt;说实话Linxu的图形界面到底没弄明白, 不清楚Xorg到底是什么东东></p>

<pre><code class="bash">&gt;&gt; sudo pacman -S xorg-server xorg-server-utils xorg-utils xorg-xinit
</code></pre>

<p><strong>注意:</strong> 这个命令中会让你选择gl的类库, 这个跟显卡有关, 我本机是Nvidia的显卡, 因此实体机安装时选择 <code>nvidia-libgl</code>, 而虚拟机安装时, 由于显卡是虚拟出来的, 因此只要简单的选择 <code>mesa-libgl</code> 即可</p>

<h3>About VAG</h3>

<p>这个地方是Arch Linux在安装过程中实体机与虚拟机的第二处不同点</p>

<ol>
<li>对于实体机而言只要安装了对应的驱动即可</li>
</ol>


<pre><code class="bash">&gt;&gt; sudo pacman -S nvidia
</code></pre>

<p><strong>注意:</strong> 需要重启后才生效, 此时会发现屏幕的分辨率降低不少</p>

<p>同时需要安装输入驱动&lt;包括键盘、鼠标和触摸板的驱动, 我遗忘里到底要安装多少, 以后再补上></p>

<pre><code class="bash">&gt;&gt; sudo pacman -S xf86-input-synapticsxf86-input-synaptics
</code></pre>

<ol>
<li>虚拟机安装</li>
</ol>


<p>我只搞定了在VBox中的桌面安装, 在VMware中到底如何操作, 大家可以尝试尝试</p>

<p>首先安装VBox的驱动</p>

<pre><code class="bash">&gt;&gt; sudo pacman -S virtualbox-guest-utils
</code></pre>

<p>内核加载模块&lt;以下所有的操作需要管理员权限></p>

<pre><code class="bash">&gt;&gt; modprobe -a vboxguest vboxsf vboxvideo
&gt;&gt; depmod $(uname -r)
&gt;&gt; vim /etc/modules-load.d/virtualbox.conf
Add following
vboxguest
vboxsf
vboxvideo
&gt;&gt; VBoxClient-all
&gt;&gt; systemctl enable vboxservice
</code></pre>

<ol>
<li>3D加速 <code>sudo pacman -S mesa</code></li>
</ol>


<h3>About Desktop</h3>

<p>主要完成openbox的安装, 以及部分软件的安装, 至于具体的配置以后再补上</p>

<p>安装 Openbox&lt;桌面管理器>, slim&lt;登陆界面></p>

<pre><code class="bash">&gt;&gt; sudo pacman -S slim openbox
</code></pre>

<p>安装中文字体</p>

<pre><code class="bash">&gt;&gt; sudo pacman -S ttf-dejavu artwiz-fonts wqy-zenhei wqy-bitmapfont wqy-microhei ttf-arphic-ukai ttf-arphic-uming
</code></pre>

<p>配置和启动测试openbox</p>

<pre><code class="bash">&gt;&gt; cp /etc/X11/xinit/xinitrc .xinitrc
&gt;&gt; vim ~/.xinitrc
Add following
exec openbox-session
&gt;&gt; mkdir -p ~/.config/openbox
&gt;&gt; cp /etc/xdg/openbox/{rc.xml,menu.xml,autostart,environment} ~/.config/openbox
</code></pre>

<p>通过 <code>startx</code> 来启动测试openbox</p>

<p>使得slim生效, 并重启, 进出桌面时代&lt;进入桌面时代, 并不意味着就不再接触终端环境了, 由于openbox的菜单没有配置好, 尽管号称进入桌面时代, 但在很长一段时间内还要和终端打交道></p>

<pre><code class="bash">&gt;&gt; sudo systemctl enable slim.service
</code></pre>

<h3>About the Software in Openbox</h3>

<p>记录部分软件在Openbox中的安装和配置</p>

<ol>
<li>shell</li>
</ol>


<p>安装X环境下的shell执行器 <code>sudo pacman -S terminator</code></p>

<ol>
<li>gvim</li>
</ol>


<p>采用gvim更换vim <code>sudo pacman -S gvim</code></p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p><a href="https://wiki.archlinux.org/index.php/USB_flash_installation_media" title="Arch Linux Official Wiki on USB-Flash-Install-Media">ArchLinux Official Wiki USB Flash Install Media</a><a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p><a href="https://wiki.archlinux.org/index.php/Beginners%27_guide" title="Arch Linux 官方用户新手指南">Arch Linux Official Wiki User Guide</a><a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
</feed>
