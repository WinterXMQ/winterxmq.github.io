<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: pptp | 落寞纷飞]]></title>
  <link href="http://WinterXMQ.github.io/blog/categories/pptp/atom.xml" rel="self"/>
  <link href="http://WinterXMQ.github.io/"/>
  <updated>2014-11-04T14:23:28+00:00</updated>
  <id>http://WinterXMQ.github.io/</id>
  <author>
    <name><![CDATA[WinterXMQ]]></name>
    <email><![CDATA[WinterXMQ@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Debian上开启VPN(PPTP)服务]]></title>
    <link href="http://WinterXMQ.github.io/blog/2014/10/11/debian-vpn/"/>
    <updated>2014-10-11T10:37:11+00:00</updated>
    <id>http://WinterXMQ.github.io/blog/2014/10/11/debian-vpn</id>
    <content type="html"><![CDATA[<p>有了纽约的服务器貌似必须开启代理模式, 虽然ShadowSocks要比VPN好多了, 但毕竟需要额外的软件或者额外的硬件, 而VPN的客户端却是各种平台上预先搭载的, 因此就有了想搭建VPN的想法, 开动&hellip;..</p>

<p>1.First, 安装pptp的服务端</p>

<pre><code class="bash">&gt;&gt; sudo apt-get install pptpd
</code></pre>

<p>2.Second, 配置在VPN模式下各主机的IP, <code>localip</code> 指的是VPN模式下PPTP服务器的IP, <code>remoteip</code> 指的是连接到PPTP服务器上的客户端的IP, 通常是一段范围, 编辑文件 <code>sudo vim /etc/pptpd.conf</code>, 在文件最后加上类似代码, 具体参数自定</p>

<pre><code class="bash">localip 192.168.92.1
remoteip 192.168.92.11-16
</code></pre>

<p>3.Third, 编辑PPTP服务器参数, 参照如下参数配置, 编辑文件 <code>sudo vim /etc/pptpd.conf</code></p>

<pre><code class="bash">name pptpd
refuse-pap
refuse-chap
refuse-mschap
require-mschap-v2
require-mppe-128
ms-dns 8.8.8.8
ms-dns 8.8.4.4
#nodefaultroute
#debug
#dump
proxyarp
lock
nobsdcomp
#nologfd
logfile /var/log/pptpd.log
</code></pre>

<p><strong>说明:</strong></p>

<ul>
<li><p>name pptpd：pptpd server的名称</p></li>
<li><p>refuse-pap：拒绝pap身份验证模式</p></li>
<li><p>refuse-chap：拒绝chap身份验证模式</p></li>
<li><p>refuse-mschap：拒绝mschap身份验证模式</p></li>
<li><p>require-mschap-v2：在端点进行连接握手时需要使用微软的mschap-v2进行自身验证</p></li>
<li><p>require-mppe-128：MPPE 模块使用 128 位加密</p></li>
<li><p>ms-dns 8.8.8.8：ppp为Windows客户端提供DNS服务器IP地址，第一个ms-dns为DNS Master，第二个为DNS Slave, 此处选用的DNS是Google的</p></li>
<li><p>proxyarp：建立 ARP 代理键值</p></li>
<li><p>lock：锁定客户端 PTY 设备文件</p></li>
<li><p>nobsdcomp：禁用 BSD 压缩模式</p></li>
<li><p>nologfd：禁止将错误信息记录到标准错误输出设备(stderr)</p></li>
</ul>


<p>4.设置用户, 编辑文件 <code>sudo vim /etc/ppp/chap-secrets</code>, 增加这样的条目 <code>username pptpd password *</code>, 其中 username 和 password 是登录口令, pptpd是服务器上PPTP软件名(默认不动), * 指代接受的IP地址</p>

<p>5.全部搞定后，我们需要重启 pptpd 服务使新配置生效 <code>sudo /etc/init.d/pptpd restart</code></p>

<p>如果这时候尝试连接的话是可以连上的，但是只能访问机器资源，不能上网，想上网的话需要继续配置。</p>

<p>6.配置IPV4的转发</p>

<p>编辑文件 <code>sudo vim /etc/sysctl.conf</code>, 修改信息如下</p>

<pre><code class="bash">#net.ipv4.ip_forward=1
net.ipv4.ip_forward=1
</code></pre>

<p>然后执行 <code>sudo sysctl –p</code> 使得修改生效, 看命令执行后的信息反馈中有无 <code>net.ipv4.ip_forward = 1</code> 这一条</p>

<p>7.防火墙iptable信息转发</p>

<pre><code class="bash">&gt;&gt; iptables -t nat -A POSTROUTING -s 192.168.9.0/24 -o eth0 -j MASQUERADE
</code></pre>

<p>8.查看端口是否打开</p>

<pre><code class="bash">&gt;&gt; netstat -antl
</code></pre>

<hr />

<p>参考资料:</p>

<ol>
<li><p>Linux（VPS+Debian）搭建配置VPN（PPTP）服务 <a href="http://blog.csdn.net/frymgump/article/details/7346840">http://blog.csdn.net/frymgump/article/details/7346840</a></p></li>
<li><p>Debian搭建vpn <a href="http://www.cnblogs.com/timeship/archive/2013/03/09/2951184.html">http://www.cnblogs.com/timeship/archive/2013/03/09/2951184.html</a></p></li>
</ol>

]]></content>
  </entry>
  
</feed>
