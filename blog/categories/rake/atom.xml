<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rake | 落寞纷飞]]></title>
  <link href="http://WinterXMQ.github.io/blog/categories/rake/atom.xml" rel="self"/>
  <link href="http://WinterXMQ.github.io/"/>
  <updated>2014-11-15T03:30:21+00:00</updated>
  <id>http://WinterXMQ.github.io/</id>
  <author>
    <name><![CDATA[WinterXMQ]]></name>
    <email><![CDATA[WinterXMQ@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress特性设置-新建Blog脚本功能定制]]></title>
    <link href="http://WinterXMQ.github.io/blog/2014/09/28/octopress-new-post-feature-add-p1/"/>
    <updated>2014-09-28T12:52:34+00:00</updated>
    <id>http://WinterXMQ.github.io/blog/2014/09/28/octopress-new-post-feature-add-p1</id>
    <content type="html"><![CDATA[<h1>新建Blog并自动使用vim打开新建文档</h1>

<hr />

<p>在使用 <code>rake new_post</code> 或者 <code>rake new_post['title']</code> 后, 需要手动打开新建的Makedown文件, 太过于繁琐</p>

<p>Octopress是采用Ruby make脚本即rake来完成的, 因此只需要修改Ruby的任务脚本 <code>Rakefile</code> 即可</p>

<p>首先, 现在脚本文件的开头位置定义编辑器</p>

<pre><code class="bash">...
require "stringex"

# Editor_config
editor = "vim"
...
</code></pre>

<p>然后再每个new_post的任务结尾处加上下述代码</p>

<pre><code class="bash">...
task :new_post, :title do |t, args|
...
  end
  if #{editor}
    system "#{editor} #{filename}"
  end
end
...
</code></pre>

<p>注: new_page任务中也需要同样的设置(虽然还不知道这个任务是干什么的)</p>

<h1>新建Blog时支持文件名和Blog的title分离</h1>

<hr />

<p>在Octopress中写Blog, 时常会出现新建完Blog后还要去修改Title, 虽然没有什么问题, 但总需要这么做就显得有点麻烦, 按照Octopress管理Blog的形式在Rake的任务脚本中自定义Rake任务, 自定义过程如下</p>

<p>这个任务与普通的new_post任务差别不大, 主要在于接受的参数多了一个, 此外在创建文件的文件名和写入文件的title名有区别而已, 在Rakefile中加入如下代码</p>

<p>{% include_code post.rb lang:ruby p/code/2014-10-03-new-post-add-post.rb  %}</p>

<h1>增加自动新建Code的任务</h1>

<hr />

<p>Octopress总有新建Blog的任务, 当需要在Blog中插入大段代码时却需要手动新建代码文件, 略微显得有些蛋疼, 于是创建了这个任务</p>

<p>Octopress中有 <code>include_code</code> 的功能, 而此次为Octopress增加的 <code>新建 Code</code> 的任务也是为了这个功能设置的</p>

<h2>小幅修改 include_code</h2>

<p>在 <code>include_code</code> 中只需要给出Code文件的文件名, 系统会在预先设定的源码文件夹中寻找文件</p>

<p>因此, 第一点要修改源码的默认路径&lt;什么文件都要放在download下, 你不觉得很失败吗></p>

<p>此处需要修改两个地方: 1) 站点配置文件 <code>_config.yml</code> 下的 <code>code_dir</code> 2) <code>include_code</code>功能的代码生成器 <code>plugins\include_code.rb</code>中的相关设定</p>

<p>1) 对于这个没有什么好说明的, 只需要打开 <code>_config.yml</code>, 修改 <code>code_dir: p/code</code>, 唯一的<strong>注意点</strong>: 目录的前后都不要有 <code>/</code></p>

<p>2) 需要替换 <code>plugins\include_code.rb</code> 中关于 <code>code_dir</code> 的默认设定</p>

<pre><code class="ruby">default_dir = 'p/code'
# code_dir = (context.registers[:site].config['code_dir'].sub(/^\//,'') || 'dowanload/code')
code_dir = (context.registers[:site].config['code_dir'].sub(/^\//,'') || default_dir)
</code></pre>

<p>此外, 个人觉得在这个功能中只给出文件名有些不好, 因此就增加了同样支持给出完整的相对路径, 如 <code>p/code/filename</code>&lt;纯属蛋疼></p>

<p>在 <code>plugins\include_code.rb</code> 中修改如下代码&lt;紧接着上面的代码></p>

<pre><code class="ruby">if @file.start_with?(code_dir)
  @file = @file[code_dir.length + 1, @file.length - 1]
end
</code></pre>

<h2>增加Rake任务 Code</h2>

<p>完成了对 <code>include_code</code> 的改造, 紧接着要完成最重要的内容, 即新增任务, 在 <code>Rakefile</code> 中增加如下内容</p>

<p>{% include_code new-code.rb lang:ruby 2014-10-04-new-post-new-code.rb %}</p>
]]></content>
  </entry>
  
</feed>
